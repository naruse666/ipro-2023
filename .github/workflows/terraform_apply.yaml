name: Terraform Apply
on:
  pull_request:
    types:
      - closed
    branches: 
      - main
permissions:
  id-token: write
  contents: read
  pull-requests: write
jobs:
  terraform_apply:
    name: apply
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - root_module: terraform/env/vpc
          - root_module: terraform/env/eks
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: configure AWS
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ap-northeast-1
      - name: setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6
      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ${{ matrix.root_module }}
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: ${{ matrix.root_module }}
      - name: Terraform Apply
        id: apply
        run: terraform apply -no-color -auto-approve
        continue-on-error: true
        working-directory: ${{ matrix.root_module }}
      - uses: actions/github-script@v6
        env:
          APPLY: "terraform\n${{ steps.apply.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `## Target env: ${{ matrix.root_module }}
            #### Terraform Init \`${{ steps.init.outcome }}\`
            #### Terraform Validate \`${{ steps.validate.outcome }}\`
            #### Terraform Apply \`${{ steps.apply.outcome }}\`

            <details><summary>Show Apply</summary>

            \`\`\`${process.env.APPLY}\`\`\`

            </details>`

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
