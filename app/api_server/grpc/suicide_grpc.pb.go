// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.21.12
// source: proto/suicide.proto

package grpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	SuicideService_SuicideRequest_FullMethodName = "/main.SuicideService/SuicideRequest"
)

// SuicideServiceClient is the client API for SuicideService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SuicideServiceClient interface {
	SuicideRequest(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error)
}

type suicideServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSuicideServiceClient(cc grpc.ClientConnInterface) SuicideServiceClient {
	return &suicideServiceClient{cc}
}

func (c *suicideServiceClient) SuicideRequest(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, SuicideService_SuicideRequest_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SuicideServiceServer is the server API for SuicideService service.
// All implementations must embed UnimplementedSuicideServiceServer
// for forward compatibility
type SuicideServiceServer interface {
	SuicideRequest(context.Context, *Request) (*Response, error)
	mustEmbedUnimplementedSuicideServiceServer()
}

// UnimplementedSuicideServiceServer must be embedded to have forward compatible implementations.
type UnimplementedSuicideServiceServer struct {
}

func (UnimplementedSuicideServiceServer) SuicideRequest(context.Context, *Request) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SuicideRequest not implemented")
}
func (UnimplementedSuicideServiceServer) mustEmbedUnimplementedSuicideServiceServer() {}

// UnsafeSuicideServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SuicideServiceServer will
// result in compilation errors.
type UnsafeSuicideServiceServer interface {
	mustEmbedUnimplementedSuicideServiceServer()
}

func RegisterSuicideServiceServer(s grpc.ServiceRegistrar, srv SuicideServiceServer) {
	s.RegisterService(&SuicideService_ServiceDesc, srv)
}

func _SuicideService_SuicideRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SuicideServiceServer).SuicideRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SuicideService_SuicideRequest_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SuicideServiceServer).SuicideRequest(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

// SuicideService_ServiceDesc is the grpc.ServiceDesc for SuicideService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SuicideService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "main.SuicideService",
	HandlerType: (*SuicideServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SuicideRequest",
			Handler:    _SuicideService_SuicideRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/suicide.proto",
}
